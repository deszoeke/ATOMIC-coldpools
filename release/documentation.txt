This documentation file was generated on 2024-06-24 by S.P. de Szoeke.


-------------------
# GENERAL INFORMATION
-------------------


1. Title of Dataset
Shallow cumulus rain drop evaporation and isotope model notebooks

2. Creator Information
de Szoeke, Simon P.
Professor
Oregon State University
College of Earth, Ocean, and Atmospheric Sciences
Address: 104 CEOAS Admin Building, Oregon State University, Corvallis, OR 97331, USA
Email: simon.deszoeke@oregonstate.edu
ORCID: https://orcid.org/0000-0003-2017-473X

Published by Oregon State University

-------------------
CONTEXTUAL INFORMATION
-------------------

1. Abstract for the dataset

Matlab and Julia functions plot analyses of observations below
shallow cumulus clouds, demonstrating the 
meteorological, thermodynamic, and isotopic signals in 
atmospheric cold pools observed at the surface in the
2020 ATOMIC / EUREC4A-iso field campaign.
Vapor evaporated from rain and ocean water is modeled.
Water vapor in strong cold pools, associated with rain are enriched in heavy
isotopes, suggesting evaporation of rain enriches air in evaporatively
cooled downdrafts that generate them.


2. Context of the research project that this dataset was collected for.

The programs were written to analyze data from EUREC4A-iso,
and to provide general meteorological, thermodynamic, and 
physical insight on cloud and precipitation processes.

3. Dates of data collection:
2020-01-05 to 2020-04-29

4. Geographic location of data collection:
Northwestern tropical Atlantic Ocean	
West: -85.1016
East: -48.103
South: 6.1679
North: 18.5706

5. Funding sources that supported the collection of the data:
This work was supported by NSF award number 1937780
NOAA award number NA19OAR4310375686, 
and ONR award number N000142212042. This material is based upon
work supported by the NSF grant no AGS-1938108.

--------------------------
SHARING/ACCESS INFORMATION
-------------------------- 


1. Licenses/restrictions placed on the software:
The whole and all parts of this software are licensed under an MIT license.
https://opensource.org/license/mit

3. Links to publications related to the dataset:

https://ir.library.oregonstate.edu/concern/datasets/br86bc57n
https://essd.copernicus.org/articles/13/1759/2021/
https://essd.copernicus.org/articles/15/465/2023/
https://acp.copernicus.org/articles/23/12671/2023/

4. Links to other publicly accessible locations of the data:
Related datasets landing page:
https://www.ncei.noaa.gov/access/metadata/landing-page/bin/iso?id=gov.noaa.nodc:ATOMIC-2020
https://catalog.data.gov/dataset/atomic-ship-rain-sampler-rainwater-isotope-ratios-from-samples-taken-aboard-noaa-ship-ronald-h-

5. Recommended citation for the data:
de Szoeke, S.P. (2025) Code for open-science analysis and figures for "Evaporation in cold pools beneath trade cumulus clouds" [Data Set; Analysis Software]. Oregon State University.


6. Dataset Digital Object Identifier (DOI)
https://doi.org/

7. Limitations to reuse
Reuse permitted with citation.


--------------------------
VERSIONING AND PROVENANCE
-------------------------- 
Version: 0.1
Last modification date: 2025-06-28


--------------------------
METHODOLOGICAL INFORMATION
--------------------------

Data and methods used are described in ESS Open Archive article:
https://essopenarchive.org/

---------------------
DATA & FILE OVERVIEW
---------------------
File List

documentation.txt               This file

Project.toml                    List of required Julia packages.

Figures 1-13 are organized in directories labeled f01 - f13.

data/                           Data directory 
The data directory should be symbolically linked into the figure directories.

./f01:
soundings_10min_interp_plots.m  Plots timeheight profiles.
b2rcolormap.m                   Matlab colormap
timeheight_q_thw_th.eps         Figure files
timeheight_q_thw_th.pdf         .
timeheight_q_thw_th.png         .
timeheight_q_thw_th.svg         .

./f02:
P3_profiles.ipynb               Julia notebook plots P3 profiles
VaporSat.jl                     Computes saturation specific humidity and wet-bulb temperature.
Project.toml                    List of required Julia packages
Manifest.toml                   Autoinstalled Julia dependencies
P3dataFlagVerticalProfiles.m    Deprecated
P3_profiles.eps                 Figure files
P3_profiles.pdf                 .
P3_profiles.png                 .
P3_profiles.svg                 .

./f03:
cp2_feb10_eg_for_schmatic.m     Plot an example cold pool with timing labels.
cold_pool_detection_algorithm_flagged_recovery.m 
vert_axes_stack.m               Plotting function
cp2_fig3.eps                    Figure files
cp2_fig3.pdf                    .
cp2_fig3.png                    .
cp2_fig3.svg                    .


./f04:
q_dD_framework_cold_pools.m                     Plot the timeseries
t_end_w_max_length.m                            Matlab dependency
timeseries_Feb7-11_TqdDd18Odxs_Fig4.eps         Figure files
timeseries_Feb7-11_TqdDd18Odxs_Fig4.pdf         .
timeseries_Feb7-11_TqdDd18Odxs_Fig4.png         .
timeseries_Feb7-11_TqdDd18Odxs_Fig4.svg         .
timeseries_leg2_TqdDd18Odxs_Fig4.eps            .
timeseries_leg2_TqdDd18Odxs_Fig4.pdf            .
timeseries_leg2_TqdDd18Odxs_Fig4.png            .
timeseries_leg2_TqdDd18Odxs_Fig4.svg            .

./f05:
plot_time_comp.m                Plot the composite time series of 14 cold pools
ranking_14cold_pools_by_dD.m    Analysis dependency
vert_axes_stack.m               Plotting function
deps:
    cbrewer2                Matlab colorbrewer colormap package.
    colorspace              Depenency of cbrewer2.

./f06:
Project.toml                            Required Julia packages.
RHB_GOES_fig_2coldpools.ipynb           Julia noteboor for plotting GOES images.

./f07:
table1_fig.eps
table1_fig.pdf
table1_fig.png
table1_fig.svg
table_14cold_pools_by_dD.m

./f08:
rank14cp2.eps
rank14cp2.pdf
rank14cp2.png
rank14cp2.svg
ranking_14cold_pools_by_dD.m
workspace_17_cp_detection_algorithm_11min.mat

./f09:
adj_t.m
air_types_iso.m
con_prop_thq_ab.eps
con_prop_thq_ab.pdf
con_prop_thq_ab.png
con_prop_thq_ab.svg
conserved_variables_updated_sd.m
height_adj.m
qs.m
th_q_to_mixfraction.m

./f10:
adj_t.m
air_types.m
air_types_iso.m
colocate_in_time.m
con_prop_dD_4panel.eps
con_prop_dD_4panel.pdf
con_prop_dD_4panel.png
con_prop_dD_4panel.svg
conserved_properties_for_isotopes.m
conserved_properties_for_isotopes_4panel.m
delta_E_eqm.m
height_adj.m
iso_estimates_from_centroid_approach.m
psi_T.m
th_q_to_mixfraction.m

./f11:
adj_t.m
air_types.m
air_types_iso.m
colocate_in_time.m
conserved_properties_for_isotopes.m
delta_E_eqm.m
height_adj.m
iso_estimates_from_centroid_approach.m
lambda_mass_flux.m
plot_q_dD.m
plotlims.m
plotqd.m
psi_T.m
th_q_to_mixfraction.m

./f12:
Rayleigh_curve_evap.m
Rayleigh_liquid_evap.m
b2rcolormap.m
inset_plot.m
mass_mixing.m
mass_mixing_test.m
mixing_fractions_iso_space_sd.m
mixing_fractions_vars_f12.mat
mixing_line_slope_yint.m
mixture_fractions_iso.eps
mixture_fractions_iso.pdf
mixture_fractions_iso.png
mixture_fractions_iso.svg
q_dD_framework_cold_pools.m
t_end_w_max_length.m
x_y_to_mixfraction.m

./f13:
lambda_mass_flux.m
plot_W_iso_ages.m
regress_transform_cp.m

-----------------------------------------
CODE-SPECIFIC INFORMATION: 
-----------------------------------------

1. Installation 
We recommend installing juliaup or the Julia binaries from https://julialang.org/downloads/.

We installed a Julia (v.1.10.4) 
Jupyter kernel using IJulia (v.1.24.2).
We ran Jupyter notebooks in Microsoft Visual Studio Code v.1.90.1
with the Jupyter VSCode extension v2024.5.0.

2. Requirements
The calculations depend on Julia packages. 
Specific packages installed are in `Project.toml`:

DataFrames = "a93c6f00-e57d-5684-b7b6-d8193f3e46c0"
ForwardDiff = "f6369f11-7733-5829-9624-2563aa707210"
Interpolations = "a98d9a8b-a2ab-59e6-89dd-64a1c18fca59"
Latexify = "23fbe1c1-3f47-55db-b15f-69d7ec21a316"
NCDatasets = "85f8d34a-cbdd-5861-8df4-14fed0d494ab"
Printf = "de0858da-6303-5e67-8744-51eddeeeb8d7"
Psychro = "9516f557-4a54-5a79-b954-c272e753c77a"
PyPlot = "d330b81b-6aea-500a-939a-2ce795aea3ee"
Revise = "295af30f-e4ad-537b-8983-00126c2a3abe"
Statistics = "10745b16-79ce-11e8-11f9-7d13ad32a3b2"
Unitful = "1986cc42-f94f-5a68-af5c-568840ba703d"

We recommend installing your own up-to-date set of the dependencies
by default with the package manager. (This is what the authors do.)
To do so, start Julia in the working directory and run the contents of
`env.jl`. 
The Julia package manager will then create a Julia environment
satisfying the dependencies in the working directory.

3. Usage

Open the Jupyter notebooks with `.ipynb` extensions.
Adapt paths to your local environment. Use `.` for the 
current working directory.
If not already running, start a Julia kernel from the pulldown
menu in the notebook.
Run the cells in the .ipynb notebook in order.

4. Support
The authors extend no warantee or expectation of support, 
express or implied, for the contents of this package.

5. Runtime requirements
The code runs on a desktop. 
Runtime requirements (Jupyter, Julia, and code dependencies) are listed above.

6. Contributing
This ScholarsArchive repository is a snapshot. 
A version-controlled working copy is maintained 
in a private GitHub repository. 
https://github.com/deszoeke/Rayleigh/tree/main/release
Users interested in contributing to this project
may contact the author for an invitation to access it.

-----------------------------------------
HUMAN SUBJECT RESEARCH STUDY INFORMATION: 
-----------------------------------------

This study does not involve human subjects and was not evaluated by an 
Institutional Review Board (IRB) or any other Ethics Committee.
